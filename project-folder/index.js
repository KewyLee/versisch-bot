// index.js - –û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
require('dotenv').config(); // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
const express = require('express');
const bodyParser = require('body-parser');
const { Telegraf } = require('telegraf');
const multer = require('multer');
const path = require('path');
const fs = require('fs');
// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ –Ω–æ–≤–æ–≥–æ –º–æ–¥—É–ª—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ PDF
const { generatePdfFromData } = require('./utils/pdfGenerator');

// –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
const config = {
  botToken: process.env.BOT_TOKEN || '7557471395:AAFNHZlMynXghYKmr16XWOWVfUpgAqP_Sh8', // –¢–æ–∫–µ–Ω Telegram –±–æ—Ç–∞
  adminChatId: process.env.ADMIN_CHAT_ID || '6085514487', // ID —á–∞—Ç–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
  templatePdfPath: process.env.PDF_TEMPLATE_PATH || path.join(__dirname, 'BIG_Vermittlervollmacht.pdf'), // –ü—É—Ç—å –∫ —à–∞–±–ª–æ–Ω—É PDF
  webappUrl: process.env.WEBAPP_URL || 'https://versisch-fda933ace75b.herokuapp.com', // URL –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
};

/**
 * –†–∞–∑–±–∏—Ä–∞–µ—Ç –∞–¥—Ä–µ—Å –Ω–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã: —É–ª–∏—Ü–∞, –Ω–æ–º–µ—Ä –¥–æ–º–∞, –∏–Ω–¥–µ–∫—Å, –≥–æ—Ä–æ–¥
 * @param {string} address - –ü–æ–ª–Ω—ã–π –∞–¥—Ä–µ—Å
 * @returns {Object} - –û–±—ä–µ–∫—Ç —Å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏ –∞–¥—Ä–µ—Å–∞
 */
function parseAddress(address) {
  if (!address || typeof address !== 'string') {
    return { street: '', houseNumber: '', zipCode: '', city: '' };
  }
  
  console.log(`–†–∞–∑–±–æ—Ä –∞–¥—Ä–µ—Å–∞: ${address}`);
  
  // –ü–æ–ø—ã—Ç–∫–∞ —Ä–∞–∑–±–æ—Ä–∞ –∞–¥—Ä–µ—Å–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ä–µ–≥—É–ª—è—Ä–Ω–æ–≥–æ –≤—ã—Ä–∞–∂–µ–Ω–∏—è
  // –§–æ—Ä–º–∞—Ç: "–£–ª–∏—Ü–∞ –ù–æ–º–µ—Ä–î–æ–º–∞, –ò–Ω–¥–µ–∫—Å –ì–æ—Ä–æ–¥" –∏–ª–∏ "–£–ª–∏—Ü–∞ –ù–æ–º–µ—Ä–î–æ–º–∞ –ò–Ω–¥–µ–∫—Å –ì–æ—Ä–æ–¥"
  const addressRegex = /^(.*?)(\d+[a-zA-Z]?)(?:,?\s+)(\d{5})(?:\s+)(.*)$/;
  const match = address.match(addressRegex);
  
  if (match) {
    return {
      street: match[1].trim(),
      houseNumber: match[2],
      zipCode: match[3],
      city: match[4]
    };
  }
  
  // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Ä–∞–∑–æ–±—Ä–∞—Ç—å –ø–æ —Ä–µ–≥—É–ª—è—Ä–Ω–æ–º—É –≤—ã—Ä–∞–∂–µ–Ω–∏—é, –ø—Ä–æ–±—É–µ–º –¥—Ä—É–≥–æ–π –ø–æ–¥—Ö–æ–¥
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤ –∞–¥—Ä–µ—Å–µ —Ü–∏—Ñ—Ä—ã (–≤–æ–∑–º–æ–∂–Ω—ã–π –Ω–æ–º–µ—Ä –¥–æ–º–∞)
  const houseNumberMatch = address.match(/(\d+[a-zA-Z]?)/);
  let street = address;
  let houseNumber = '';
  
  if (houseNumberMatch) {
    const parts = address.split(houseNumberMatch[0]);
    street = parts[0].trim();
    houseNumber = houseNumberMatch[0];
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ—Å–ª–µ –Ω–æ–º–µ—Ä–∞ –¥–æ–º–∞ –µ—â–µ —Ç–µ–∫—Å—Ç (–≤–æ–∑–º–æ–∂–Ω—ã–π –∏–Ω–¥–µ–∫—Å –∏ –≥–æ—Ä–æ–¥)
    if (parts[1]) {
      const cityParts = parts[1].trim().split(/\s+/);
      // –ï—Å–ª–∏ –ø–µ—Ä–≤–∞—è —á–∞—Å—Ç—å –ø–æ—Ö–æ–∂–∞ –Ω–∞ –∏–Ω–¥–µ–∫—Å (5 —Ü–∏—Ñ—Ä)
      if (cityParts[0] && /^\d{5}$/.test(cityParts[0])) {
        return {
          street: street,
          houseNumber: houseNumber,
          zipCode: cityParts[0],
          city: cityParts.slice(1).join(' ')
        };
      }
    }
  }
  
  // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Ä–∞–∑–æ–±—Ä–∞—Ç—å –∞–¥—Ä–µ—Å, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ —É–ª–∏—Ü—É
  console.log(`–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–∑–æ–±—Ä–∞—Ç—å –∞–¥—Ä–µ—Å. –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–∞–∫ —É–ª–∏—Ü—É: ${street}`);
  return {
    street: street,
    houseNumber: houseNumber,
    zipCode: '',
    city: ''
  };
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
if (!config.botToken || !config.adminChatId) {
  console.warn('–í–Ω–∏–º–∞–Ω–∏–µ: –ù–µ –∑–∞–¥–∞–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è BOT_TOKEN –∏/–∏–ª–∏ ADMIN_CHAT_ID. –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.');
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Express
const app = express();
app.use(bodyParser.json({ limit: '50mb' }));
app.use(bodyParser.urlencoded({ extended: true, limit: '50mb' }));
app.use(express.static('public'));
app.use(express.static(path.join(__dirname, 'public')));

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
const storage = multer.diskStorage({
  destination: (req, file, cb) => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –¥–ª—è –∑–∞–≥—Ä—É–∑–æ–∫
    const uploadDir = './uploads';
    if (!fs.existsSync(uploadDir)) {
      fs.mkdirSync(uploadDir, { recursive: true });
    }
    cb(null, uploadDir);
  },
  filename: (req, file, cb) => {
    cb(null, Date.now() + path.extname(file.originalname));
  }
});
const upload = multer({ storage: storage });

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö —Ñ–æ—Ä–º
const filledFormsDir = './filled_forms';
if (!fs.existsSync(filledFormsDir)) {
  fs.mkdirSync(filledFormsDir, { recursive: true });
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ Telegram
const bot = new Telegraf(config.botToken);

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
bot.start((ctx) => {
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞—á–∞–ª –æ–±—â–µ–Ω–∏–µ —Å –±–æ—Ç–æ–º
  const userId = ctx.from.id;
  const userName = ctx.from.username || '';
  const firstName = ctx.from.first_name || '';
  const lastName = ctx.from.last_name || '';
  
  console.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—á–∞–ª –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –±–æ—Ç–æ–º: ID ${userId}, username: @${userName}, –∏–º—è: ${firstName} ${lastName}`);
  
  ctx.reply('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –î–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ–æ—Ä–º—ã –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø:', {
    reply_markup: {
      inline_keyboard: [
        [{ text: '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è —Ñ–æ—Ä–º–∞', web_app: { 
          url: `${config.webappUrl}?userId=${userId}&username=${userName}&name=${encodeURIComponent(firstName + ' ' + lastName)}` 
        } }],
        [{ text: '–î–æ–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å BIG', web_app: { 
          url: `${config.webappUrl}/vollmacht?userId=${userId}&username=${userName}&name=${encodeURIComponent(firstName + ' ' + lastName)}` 
        } }]
      ]
    }
  });
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
async function sendDataToAdmin(formData, pdfPath, photoPath) {
  try {
    console.log('–û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ PDF —Ñ–∞–π–ª–∞
    if (!fs.existsSync(pdfPath)) {
      throw new Error(`PDF —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: ${pdfPath}`);
    }
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    let message = `üîî *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è*\n\n`;
    message += `üë§ *–ò–º—è*: ${formData.firstName || ''} ${formData.lastName || ''}\n`;
    
    if (formData.insuranceNumber) {
      message += `üìã *–ù–æ–º–µ—Ä —Å—Ç—Ä–∞—Ö–æ–≤–∫–∏*: ${formData.insuranceNumber}\n`;
    }
    
    if (formData.insuranceAddress) {
      message += `üè† *–ê–¥—Ä–µ—Å*: ${formData.insuranceAddress}\n`;
    }
    
    if (formData.insuranceCompany) {
      message += `üè¢ *–°—Ç—Ä–∞—Ö–æ–≤–∞—è –∫–æ–º–ø–∞–Ω–∏—è*: ${formData.insuranceCompany}\n`;
    }
    
    if (formData.birthDate) {
      message += `üéÇ *–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è*: ${formData.birthDate}\n`;
    }
    
    // –ü–æ–ª—É—á–∞–µ–º ID —á–∞—Ç–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    const adminChatId = process.env.ADMIN_CHAT_ID;
    
    if (!adminChatId) {
      console.warn('ID —á–∞—Ç–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –Ω–µ —É–∫–∞–∑–∞–Ω –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏');
      return false;
    }
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
    await bot.telegram.sendMessage(adminChatId, message, { parse_mode: 'Markdown' });
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º PDF —Ñ–∞–π–ª
    console.log(`–û—Ç–ø—Ä–∞–≤–∫–∞ PDF —Ñ–∞–π–ª–∞: ${pdfPath}`);
    await bot.telegram.sendDocument(adminChatId, {
      source: fs.readFileSync(pdfPath),
      filename: path.basename(pdfPath)
    });
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ –ø–æ–¥–ø–∏—Å–∏, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
    if (photoPath && fs.existsSync(photoPath)) {
      console.log(`–û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ –ø–æ–¥–ø–∏—Å–∏: ${photoPath}`);
      await bot.telegram.sendPhoto(adminChatId, {
        source: fs.readFileSync(photoPath)
      });
    }
    
    console.log('–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É');
    return true;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–∞–Ω–Ω—ã—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É:', error);
    throw error;
  }
}

// API –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã
app.post('/api/submit-form', async (req, res) => {
  try {
    console.log('–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã');
    const formData = req.body;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
    if (!formData.firstName || !formData.lastName) {
      return res.status(400).json({ success: false, error: '–ù–µ —É–∫–∞–∑–∞–Ω—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è' });
    }
    
    console.log('–î–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã:', formData);
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∞–¥—Ä–µ—Å, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
    if (formData.insuranceAddress) {
      const addressComponents = parseAddress(formData.insuranceAddress);
      formData.addressComponents = addressComponents;
      console.log('–†–∞–∑–æ–±—Ä–∞–Ω–Ω—ã–π –∞–¥—Ä–µ—Å:', addressComponents);
    }
    
    // –°–æ–∑–¥–∞–µ–º PDF –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã
    console.log('–°–æ–∑–¥–∞–Ω–∏–µ PDF...');
    let pdfPath;
    try {
      pdfPath = await generatePdfFromData(formData, formData.signatureData);
      console.log(`PDF —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω: ${pdfPath}`);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ PDF:', error);
      return res.status(500).json({ success: false, error: `–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ PDF: ${error.message}` });
    }
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–¥–ø–∏—Å—å –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
    let photoPath = null;
    if (formData.signatureData) {
      try {
        // –£–¥–∞–ª—è–µ–º –ø—Ä–µ—Ñ–∏–∫—Å data:image/png;base64, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
        const base64Data = formData.signatureData.replace(/^data:image\/png;base64,/, '');
        
        // –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ø–æ–¥–ø–∏—Å–µ–π, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        const signatureDir = path.join(__dirname, 'signatures');
        if (!fs.existsSync(signatureDir)) {
          fs.mkdirSync(signatureDir, { recursive: true });
        }
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–¥–ø–∏—Å—å –∫–∞–∫ —Ñ–∞–π–ª
        photoPath = path.join(signatureDir, `signature_${Date.now()}.png`);
        fs.writeFileSync(photoPath, Buffer.from(base64Data, 'base64'));
        console.log(`–ü–æ–¥–ø–∏—Å—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: ${photoPath}`);
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø–æ–¥–ø–∏—Å–∏:', error);
        // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–∂–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∏
      }
    }
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
    try {
      await sendDataToAdmin(formData, pdfPath, photoPath);
      console.log('–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É');
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–∞–Ω–Ω—ã—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É:', error);
      // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–∂–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
    }
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç
    res.json({ success: true, message: '–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã' });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞:', error);
    res.status(500).json({ success: false, error: error.message });
  }
});

// –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è —Ñ–æ—Ä–º—ã –¥–æ–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ BIG
app.get('/vollmacht', (req, res) => {
  res.sendFile(path.join(__dirname, 'public', 'vollmacht.html'));
});

// –î–æ–±–∞–≤–ª—è–µ–º –º–∞—Ä—à—Ä—É—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏
app.get('/', (req, res) => {
  res.send('–°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç! –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –æ—Ç–∫—Ä–æ–π—Ç–µ –µ–≥–æ —á–µ—Ä–µ–∑ Telegram –±–æ—Ç–∞.');
});

// –î–æ–±–∞–≤–ª—è–µ–º –º–∞—Ä—à—Ä—É—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è PDF-—à–∞–±–ª–æ–Ω–∞
app.get('/api/get-template-pdf', (req, res) => {
  try {
    console.log('–ó–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ PDF-—à–∞–±–ª–æ–Ω–∞');
    console.log('–ò—Å–∫–æ–º—ã–π –ø—É—Ç—å –∫ —à–∞–±–ª–æ–Ω—É:', config.templatePdfPath);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞
    if (!fs.existsSync(config.templatePdfPath)) {
      console.error(`–®–∞–±–ª–æ–Ω PDF –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ –ø—É—Ç–∏: ${config.templatePdfPath}`);
      return res.status(404).send('PDF —à–∞–±–ª–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª BIG_Vermittlervollmacht.pdf –¥–æ–±–∞–≤–ª–µ–Ω –≤ –ø—Ä–æ–µ–∫—Ç.');
    }
    
    console.log('–®–∞–±–ª–æ–Ω PDF –Ω–∞–π–¥–µ–Ω, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ –∫–ª–∏–µ–Ω—Ç—É');
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è —Ñ–∞–π–ª–∞
    res.setHeader('Content-Type', 'application/pdf');
    res.setHeader('Content-Disposition', 'inline; filename=template.pdf');
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª –∫–ª–∏–µ–Ω—Ç—É
    const fileStream = fs.createReadStream(config.templatePdfPath);
    fileStream.pipe(res);
    
    console.log('PDF-—à–∞–±–ª–æ–Ω —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∫–ª–∏–µ–Ω—Ç—É');
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ PDF-—à–∞–±–ª–æ–Ω–∞:', error);
    res.status(500).send('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ PDF-—à–∞–±–ª–æ–Ω–∞');
  }
});

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
  console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
  console.log(`WebApp URL: ${config.webappUrl}`);
  console.log(`–®–∞–±–ª–æ–Ω PDF: ${config.templatePdfPath}`);
  
  // –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ Telegram
  bot.launch()
    .then(() => console.log('Telegram –±–æ—Ç –∑–∞–ø—É—â–µ–Ω'))
    .catch(err => console.error('–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ Telegram –±–æ—Ç–∞:', err));
  
  // –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –ø—Ä–∏ —Å–∏–≥–Ω–∞–ª–µ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
  process.once('SIGINT', () => bot.stop('SIGINT'));
  process.once('SIGTERM', () => bot.stop('SIGTERM'));
});